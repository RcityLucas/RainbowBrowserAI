{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(cargo check:*)",
      "Bash(timeout 30 cargo check --no-deps)",
      "Bash(rustc:*)",
      "Bash(cargo build:*)",
      "Bash(timeout 120 cargo check)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(timeout 300 cargo check)",
      "Bash(cargo metadata:*)",
      "Bash(cargo test:*)",
      "Bash(python:*)",
      "Bash(chcp:*)",
      "Bash(cargo clean:*)",
      "Bash(cargo:*)",
      "Bash(rustup toolchain install:*)",
      "Bash(rustup:*)",
      "Bash(grep:*)",
      "Bash(timeout 120 cargo check --message-format short)",
      "Bash(where:*)",
      "Bash(cp:*)",
      "Bash(powershell:*)",
      "Bash(timeout 60 cargo check --bin simple_demo)",
      "Bash(dir:*)",
      "Bash(timeout 120 cargo run --example basic_functionality_test)",
      "Bash(./run_simple.exe)",
      "Bash(run_minimal.exe)",
      "Bash(./run_minimal.exe)",
      "Bash(./browser_standalone.exe)",
      "Bash(D:githubRainbowBrowserAIbrowser_standalone.exe)",
      "Bash(.browser_standalone.exe)",
      "Bash(./browser_standalone)",
      "Bash(timeout 30s cargo check --message-format=short)",
      "Bash(./integrated_demo_fixed)",
      "Bash(timeout 60s cargo check --message-format=short)",
      "Bash(./simple_browser_test)",
      "Bash(timeout 30s cargo check --lib)",
      "Bash(./working_demo.exe)",
      "Bash(./simple_browser_test.exe)",
      "Bash(./integrated_demo_fixed.exe)",
      "Bash(./实际应用演示.exe)",
      "Bash(rm:*)",
      "Bash(touch:*)",
      "Bash(true)",
      "Bash(timeout 30s cargo run --example simple_test)",
      "Bash(./minimal_test.exe)",
      "Bash(./syntax_test.exe)",
      "Bash(timeout 60s cargo check --lib)",
      "Bash(timeout 60s cargo build)",
      "Bash(timeout 5 cargo run --example real_world_demo --quiet)",
      "Bash(chmod:*)",
      "Bash(./build_standalone.sh:*)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git ls-tree:*)",
      "Bash(git fsck:*)",
      "Bash(git commit:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Bash(git rm:*)",
      "Bash(git pull:*)",
      "Bash(tree:*)",
      "Bash(./test_api_connection.sh:*)",
      "Bash(RAINBOW_MOCK_MODE=true python3 debug_test.py)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin rainbow-poc)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin rainbow-poc -- serve)",
      "Bash(RAINBOW_MOCK_MODE=true ./target/debug/rainbow-poc serve --port 3001)",
      "Bash(pip install:*)",
      "Bash(playwright install:*)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- serve --port 3001)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- serve --port 3002)",
      "Bash(./test_fix)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --release -- serve --port 3000)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- serve --port 3000)",
      "Bash(timeout 60s cargo check)",
      "Bash(timeout 120s cargo check)",
      "Bash(timeout 30s cargo doc --no-deps --open)",
      "Bash(timeout 60s cargo test)",
      "Bash(timeout 30s cargo test)",
      "Bash(timeout 120s cargo test)",
      "Bash(timeout:*)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 10s cargo run -- ask \"give me a travel plan\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo run -- ask \"give me a travel plan\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo run -- ask \"give me a travel plan\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo run --release -- ask \"give me a travel plan\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 10s cargo run -- ask \"plan a trip\")",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- ask \"give me a travel plan\")",
      "Bash(export RAINBOW_MOCK_MODE=true)",
      "Bash(sed:*)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 120s cargo build)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s ./target/debug/rainbow-poc ask \"give me a travel plan\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s ./target/debug/rainbow-poc ask \"give me a travel plan\")",
      "Bash(RAINBOW_MOCK_MODE=true ENABLE_ADAPTIVE_MEMORY=true cargo build)",
      "Bash(RAINBOW_MOCK_MODE=true ENABLE_ADAPTIVE_MEMORY=true ./target/debug/rainbow-poc ask \"give me a travel plan\")",
      "Bash(RAINBOW_MOCK_MODE=true cargo build)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo check)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo check)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo build)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 10s cargo test mock_llm_provider --lib)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 10s cargo check --lib)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo check --lib)",
      "Bash(./target/debug/rainbow-poc --help)",
      "Bash(pgrep:*)",
      "Bash(RUST_LOG=info cargo run -- navigate \"https://example.com\" --screenshot)",
      "Bash(taskkill:*)",
      "Bash(RUST_LOG=info cargo run -- navigate \"https://google.com\" --screenshot)",
      "Bash(RUST_LOG=debug cargo run --example port_9520_test)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- ask \"navigate to example.com and take a screenshot\")",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- ask \"click on the search button and type hello world\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo check --lib)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo check --lib --message-format short)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 10s cargo run -- --help)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo build --release)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo build --bin rainbow-poc)",
      "Bash(./target/debug/rainbow-poc:*)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --example test_performance_monitor)",
      "Bash(pip3 list:*)",
      "Bash(./simple_perf_demo.sh:*)",
      "Bash(chromedriver:*)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s /mnt/d/github/RainbowBrowserAI/poc/target/debug/rainbow-poc navigate --help)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s /mnt/d/github/RainbowBrowserAI/poc/target/debug/rainbow-poc navigate https://example.com --screenshot)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s /mnt/d/github/RainbowBrowserAI/poc/target/debug/rainbow-poc ask \"navigate to google and take a screenshot\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s ./target/debug/rainbow-poc --help)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s ./target/debug/rainbow-poc ask \"use smart_click to click on a button that says More information\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s ./target/debug/rainbow-poc ask \"navigate to example.com and click on a link\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s ./target/debug/rainbow-poc ask \"navigate to example.com and take a screenshot\")",
      "Bash(RAINBOW_MOCK_MODE=true timeout 90s ./target/debug/rainbow-poc workflow test_smart_interactions.yaml)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 120s ./target/debug/rainbow-poc workflow test_smart_interactions.yaml)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 120s ./target/debug/rainbow-poc workflow test_click_demo.yaml)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s ./target/debug/rainbow-poc workflow test_scroll_demo.yaml)",
      "Bash(git checkout:*)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin poc-runner -- --help)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin rainbow-poc -- --help)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin comprehensive_tool_test)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo build --bin comprehensive_tool_test)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo run --bin test_tool_imports)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo check --message-format short)",
      "Bash(RAINBOW_MOCK_MODE=true cargo check)",
      "Bash(RAINBOW_MOCK_MODE=true cargo build --bin rainbow-poc)",
      "Bash(./check_errors.sh)",
      "Bash(./check_errors_detail.sh:*)",
      "Bash(./check_error.sh:*)",
      "Bash(./build_final.sh)",
      "Bash(./test_web.sh:*)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo build)",
      "Bash(RAINBOW_MOCK_MODE=true cargo build --bin rainbow-poc --release)",
      "Bash(cat:*)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo run --bin tools_test_demo)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo test tools_test_demo::tests::test_tools_inventory -- --nocapture)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin rainbow-poc -- serve --port 3001)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 10s cargo run --bin rainbow-poc -- --help)",
      "Bash(./test_all_tools.sh)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo run --bin comprehensive_tools_demo)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin rainbow-poc -- serve --port 3000)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 60s cargo run --bin rainbow-poc -- serve --port 3001)",
      "Bash(./start.sh:*)",
      "Bash(ss:*)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 10s cargo run --bin rainbow-poc -- serve --port 3000)",
      "Bash(RAINBOW_MOCK_MODE=true ./target/debug/rainbow-poc serve --port 3000)",
      "Bash(sudo netstat:*)",
      "Bash(fuser:*)",
      "Bash(kill:*)",
      "Bash(env RAINBOW_MOCK_MODE=true cargo run --bin rainbow-poc -- serve --port 3001)",
      "Bash(env RAINBOW_MOCK_MODE=true cargo build --bin rainbow-poc)",
      "Bash(RAINBOW_MOCK_MODE=true CHROMEDRIVER_PORT=9516 cargo run --bin rainbow-poc -- serve --port 3001)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 30s cargo build --message-format short)",
      "Bash(RAINBOW_MOCK_MODE=true CHROMEDRIVER_PORT=9516 ./target/debug/rainbow-poc serve --port 3001)",
      "Bash(RAINBOW_MOCK_MODE=true timeout 20s cargo build --message-format short)"
    ],
    "deny": []
  }
}