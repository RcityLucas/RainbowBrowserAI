{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(cargo check:*)",
      "Bash(timeout 30 cargo check --no-deps)",
      "Bash(rustc:*)",
      "Bash(cargo build:*)",
      "Bash(timeout 120 cargo check)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(timeout 300 cargo check)",
      "Bash(cargo metadata:*)",
      "Bash(cargo test:*)",
      "Bash(python:*)",
      "Bash(chcp:*)",
      "Bash(cargo clean:*)",
      "Bash(cargo:*)",
      "Bash(rustup toolchain install:*)",
      "Bash(rustup:*)",
      "Bash(grep:*)",
      "Bash(timeout 120 cargo check --message-format short)",
      "Bash(where:*)",
      "Bash(cp:*)",
      "Bash(powershell:*)",
      "Bash(timeout 60 cargo check --bin simple_demo)",
      "Bash(dir:*)",
      "Bash(timeout 120 cargo run --example basic_functionality_test)",
      "Bash(./run_simple.exe)",
      "Bash(run_minimal.exe)",
      "Bash(./run_minimal.exe)",
      "Bash(./browser_standalone.exe)",
      "Bash(D:githubRainbowBrowserAIbrowser_standalone.exe)",
      "Bash(.browser_standalone.exe)",
      "Bash(./browser_standalone)",
      "Bash(timeout 30s cargo check --message-format=short)",
      "Bash(./integrated_demo_fixed)",
      "Bash(timeout 60s cargo check --message-format=short)",
      "Bash(./simple_browser_test)",
      "Bash(timeout 30s cargo check --lib)",
      "Bash(./working_demo.exe)",
      "Bash(./simple_browser_test.exe)",
      "Bash(./integrated_demo_fixed.exe)",
      "Bash(./实际应用演示.exe)",
      "Bash(rm:*)",
      "Bash(touch:*)",
      "Bash(true)",
      "Bash(timeout 30s cargo run --example simple_test)",
      "Bash(./minimal_test.exe)",
      "Bash(./syntax_test.exe)",
      "Bash(timeout 60s cargo check --lib)",
      "Bash(timeout 60s cargo build)",
      "Bash(timeout 5 cargo run --example real_world_demo --quiet)",
      "Bash(chmod:*)",
      "Bash(./build_standalone.sh:*)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git ls-tree:*)",
      "Bash(git fsck:*)",
      "Bash(git commit:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Bash(git rm:*)",
      "Bash(git pull:*)",
      "Bash(tree:*)",
      "Bash(./test_api_connection.sh:*)",
      "Bash(RAINBOW_MOCK_MODE=true python3 debug_test.py)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin rainbow-poc)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --bin rainbow-poc -- serve)",
      "Bash(RAINBOW_MOCK_MODE=true ./target/debug/rainbow-poc serve --port 3001)",
      "Bash(pip install:*)",
      "Bash(playwright install:*)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- serve --port 3001)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- serve --port 3002)",
      "Bash(./test_fix)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run --release -- serve --port 3000)",
      "Bash(RAINBOW_MOCK_MODE=true cargo run -- serve --port 3000)"
    ],
    "deny": []
  }
}