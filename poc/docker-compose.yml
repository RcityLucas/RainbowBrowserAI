version: '3.8'

services:
  # Main RainbowBrowserAI API Service
  rainbow-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: rainbow-browserai:latest
    container_name: rainbow-api
    ports:
      - "3000:3000"
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - API_HOST=0.0.0.0
      - API_PORT=3000
      - DAILY_BUDGET=${DAILY_BUDGET:-10.00}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - CHROME_NO_SANDBOX=true
      - PLUGIN_DIR=/app/plugins
      - SCREENSHOT_DIR=/app/screenshots
      - DATA_DIR=/app/data
    volumes:
      - ./screenshots:/app/screenshots
      - ./plugins:/app/plugins
      - rainbow-data:/app/data
    networks:
      - rainbow-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Alternative: Use Selenium Chrome for browser operations
  # Uncomment if you prefer Selenium over embedded Chromium
  # chromedriver:
  #   image: selenium/standalone-chrome:latest
  #   container_name: rainbow-chromedriver
  #   environment:
  #     - SE_NODE_MAX_SESSIONS=10
  #     - SE_NODE_SESSION_TIMEOUT=300
  #   ports:
  #     - "4444:4444"  # Selenium Grid UI
  #     - "7900:7900"  # VNC server for debugging
  #   shm_size: 2gb
  #   networks:
  #     - rainbow-net
  #   restart: unless-stopped

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: rainbow-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - rainbow-net
    restart: unless-stopped

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: rainbow-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3001:3000"  # Changed to 3001 to avoid conflict with API
    networks:
      - rainbow-net
    depends_on:
      - prometheus
    restart: unless-stopped

  # Optional: Redis for distributed caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: rainbow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rainbow-net
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for persistent storage (future enhancement)
  postgres:
    image: postgres:15-alpine
    container_name: rainbow-postgres
    environment:
      - POSTGRES_DB=rainbow
      - POSTGRES_USER=rainbow
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-rainbow123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rainbow-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rainbow"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  rainbow-net:
    driver: bridge
    name: rainbow-network

volumes:
  rainbow-data:
    name: rainbow-data
  prometheus_data:
    name: rainbow-prometheus-data
  grafana_data:
    name: rainbow-grafana-data
  redis_data:
    name: rainbow-redis-data
  postgres_data:
    name: rainbow-postgres-data