# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# MacOS
.DS_Store
.AppleDouble
.LSOverride
._*

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Vim
*.swp
*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Application-specific ignores
# Logs
*.log
logs/
log/

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# Dependency directories
node_modules/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Configuration files with sensitive data
config.json
secrets.json
*.key
*.pem
*.crt
*.p12

# Database files
*.db
*.sqlite
*.sqlite3

# Session files
sessions/

# Cache directories
.cache/
*.cache

# Build outputs
dist/
build/
out/

# Browser extension builds
src/browser_extension/build/
src/browser_extension/dist/
src/browser_extension/node_modules/

# WebDriver downloads
drivers/
selenium/
geckodriver*
chromedriver*
msedgedriver*

# AI model files (if any)
models/
*.model
*.gguf
*.bin

# Screenshots and test outputs
screenshots/
test-results/
test-output/

# Temporary files
tmp/
temp/
.tmp/

# Package manager lock files (except Cargo.lock for executables)
package-lock.json
yarn.lock
pnpm-lock.yaml

# Documentation build outputs
docs/_build/
site/

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Python virtual environments (if any Python scripts)
venv/
env/
.venv/
.env/

# Rust-specific
# Generated by wasm-pack
pkg/

# Local Netlify folder
.netlify

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Performance monitoring files
flamegraph.svg
perf.data*

# Benchmark results
criterion/

# Local development files
local/
.local/

# Backup files
*.backup
*.bak
*.orig

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Executables
*.exe
*.com
*.app

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# RainbowBrowserAI specific ignores
# User data and sessions
user_data/
browser_data/
session_data/

# Generated browser profiles
profiles/
.mozilla/
.chrome/

# Extension development files
manifest.json.bak
extension.zip

# Server data
server_data/
uploads/

# AI processing temporary files
processing/
ai_temp/

# Custom configuration overrides
custom_config.json
local_config.json

# Performance and monitoring data
monitoring/
metrics/
analytics/

# License and legal files that might contain sensitive info
license_private.txt

# Standalone build artifacts (keep main outputs)
# but ignore temporary build files
target/standalone/*.d
target/release/deps/
target/debug/deps/

# Keep important standalone files
!target/standalone/rainbow-browser-standalone
!target/standalone/rainbow-browser-standalone.exe

# User-specific browser extension settings
extension_settings.json

# Development database files
dev.db
test.db

# Generated documentation that's not meant to be committed
api_docs/
internal_docs/

# Terraform files (if infrastructure as code is used)
*.tfstate
*.tfstate.*
.terraform/
*.tfplan

# Docker files (development)
.dockerignore
docker-compose.override.yml

# Miscellaneous
*.class
*.jar
*.war
*.ear
*.logs
*.iml
*.ipr
*.iws